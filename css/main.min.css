.index-pg{background:linear-gradient(270deg,#d6e1d9,#e1e3ea);font-size:18px;box-sizing:border-box}.index-pg__start{max-width:1200px;margin:100px auto}.start{display:flex;flex-direction:column;align-items:center}.start__text{margin:0 0 20px}.start__title{font-size:24px}.start__sum,.start__text-add,.start__title{margin:0 0 20px}.start__sum{display:flex;align-items:center}.sum__button{position:relative;width:40px;height:20px;margin-left:10px;-webkit-appearance:none;background:#c6c6c6;outline:0;border-radius:20px;box-shadow:inset 0 0 5px rgba(0,0,0,.2);transition:.5s}.sum__button:checked{background:#03a9f4}.sum__button:before{content:"";position:absolute;width:20px;height:20px;border-radius:20px;top:0;left:0;background:#fff;transform:scale(1.1);box-shadow:0 2px 5px rgba(0,0,0,.2);transition:.5s}.sum__button:checked:before{left:20px}.start__form{display:flex;flex-direction:column;align-items:center}.start__form-input{display:flex;flex-wrap:wrap;margin-bottom:20px}.start__box{margin-right:25px;display:flex;flex-direction:column;align-items:center}.start__box:last-of-type{margin-right:0}.start__currency{min-width:180px;border-radius:25px;padding:5px 5px 5px 10px}.start__span-dollar,.start__span-euro,.start__span-gbp,.start__span-jpy,.start__span-rub{margin-bottom:10px}.start__form-btn-hide{background-image:url(../img/hide.svg);background-repeat:no-repeat;background-size:38.5px 34.8px;background-position:center;margin:15px 0 0 15px;width:50px;height:50px}.start__form-btn-hide:hover{background-image:url(../img/hover-hide.svg);background-size:40px 36px;cursor:pointer}.start__form-btn{font-size:18px;padding:5px 15px;margin-bottom:20px;background-color:#fff;box-shadow:2px 2px rgba(0,0,0,.34);border-radius:25px;border:0;cursor:pointer}.start__form-btn:hover{background-color:#000;color:#fff;border-top-right-radius:0;border-bottom-left-radius:0;box-shadow:2px 2px red}.start__top{display:flex;flex-direction:column;align-items:center;margin-bottom:100px}.top__result{font-size:96px;background:linear-gradient(90deg,#9ed9af 0,#b6c0df 63%);-webkit-background-clip:text;-webkit-text-fill-color:transparent}.start__donate{margin-bottom:0;position:relative}.start__donate:after{content:"";position:absolute;width:126px;height:38px;background-image:url(../img/smile.png);top:-126px;left:45px}.index-pg__footer{max-width:1500px;margin:0 auto;display:flex;flex-direction:column;align-items:center}.index-pg__footer-email{text-decoration:none}.index-pg__footer-email,.index-pg__footer-text{color:#b0b0b0;font-size:14px}@media (max-width:1200px){.index-pg{background:linear-gradient(90deg,rgba(160,158,252,.5) -45%,rgba(0,102,255,.25) 145%),linear-gradient(180deg,rgba(255,255,255,0) 5%,#000 130%)}.index-pg__start{margin:20px auto}.start__title{position:relative}.start__title:after{content:"";position:absolute;width:100vw;height:10px;background-color:#fff;top:11px;left:calc(-50vw + 114px);z-index:-1}.start__text-add{text-align:center;max-width:270px}.start__sum{margin-bottom:5px}.start__form-input{flex-direction:column-reverse;align-items:center}.start__box{margin:0 0 10px;position:relative}.start__box:first-of-type{margin-bottom:0}.start__form-btn-hide{margin:0 0 5px;background-size:25px 22px;width:27px;height:28px}.start__form-btn-hide:hover{background-image:url(../img/hover-hide.svg);background-size:25px 22px}.start__span-dollar,.start__span-euro,.start__span-gbp,.start__span-jpy,.start__span-rub{position:absolute;top:4px;left:175px;margin:0}.start__form-btn{padding:5px 45px}.top__text{max-width:170px}.start__donate:after{left:73px}.index-pg__footer-text,.top__text{text-align:center}}@media (max-width:600px){.top__result{font-size:50px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */